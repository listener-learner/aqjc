package com.tyust.dao.app;

import com.tyust.bean.app.DeviceBaseInfo;
import com.tyust.bean.app.DeviceBaseInfoExample;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class DeviceBaseInfoDAOImpl extends SqlMapClientDaoSupport implements DeviceBaseInfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public DeviceBaseInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int countByExample(DeviceBaseInfoExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("T_DEVICE_BASE_INFO.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int deleteByExample(DeviceBaseInfoExample example) {
        int rows = getSqlMapClientTemplate().delete("T_DEVICE_BASE_INFO.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int deleteByPrimaryKey(String deviceId) {
        DeviceBaseInfo key = new DeviceBaseInfo();
        key.setDeviceId(deviceId);
        int rows = getSqlMapClientTemplate().delete("T_DEVICE_BASE_INFO.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public void insert(DeviceBaseInfo record) {
        getSqlMapClientTemplate().insert("T_DEVICE_BASE_INFO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public void insertSelective(DeviceBaseInfo record) {
        getSqlMapClientTemplate().insert("T_DEVICE_BASE_INFO.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    @SuppressWarnings("unchecked")
    public List<DeviceBaseInfo> selectByExample(DeviceBaseInfoExample example) {
        List<DeviceBaseInfo> list = getSqlMapClientTemplate().queryForList("T_DEVICE_BASE_INFO.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public DeviceBaseInfo selectByPrimaryKey(String deviceId) {
        DeviceBaseInfo key = new DeviceBaseInfo();
        key.setDeviceId(deviceId);
        DeviceBaseInfo record = (DeviceBaseInfo) getSqlMapClientTemplate().queryForObject("T_DEVICE_BASE_INFO.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int updateByExampleSelective(DeviceBaseInfo record, DeviceBaseInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("T_DEVICE_BASE_INFO.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int updateByExample(DeviceBaseInfo record, DeviceBaseInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("T_DEVICE_BASE_INFO.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKeySelective(DeviceBaseInfo record) {
        int rows = getSqlMapClientTemplate().update("T_DEVICE_BASE_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKey(DeviceBaseInfo record) {
        int rows = getSqlMapClientTemplate().update("T_DEVICE_BASE_INFO.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table T_DEVICE_BASE_INFO
     *
     * @ibatorgenerated
     */
    private static class UpdateByExampleParms extends DeviceBaseInfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, DeviceBaseInfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
	@SuppressWarnings("unchecked")
	public List<DeviceBaseInfo> selApplyDve(String applyId){
		List<DeviceBaseInfo> list = getSqlMapClientTemplate().queryForList("T_DEVICE_BASE_INFO.selApplyDve", applyId);
		return list;
	}
	
	/**
	 * 删除申请所属的所有设备的基本信息
	 * @param applyId
	 * @return
	 */
	public int delApplyDve(String applyId){
		int res = 0;
		res = getSqlMapClientTemplate().delete("T_DEVICE_BASE_INFO.delApplyDve", applyId);
		return res;
	}

	@Override
	public List<DeviceBaseInfo> selDevice(DeviceBaseInfo device) {
		List<DeviceBaseInfo> list = getSqlMapClientTemplate().queryForList("T_DEVICE_BASE_INFO.selDevice", device);
		return list;
	}
	
	public int countDevice(DeviceBaseInfo device) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject("T_DEVICE_BASE_INFO.countDevice", device);
		return count;
	}
}