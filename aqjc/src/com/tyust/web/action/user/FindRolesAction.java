/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.tyust.web.action.user;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts2.ServletActionContext;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.tyust.bean.unit.TBaseUnitInfo;
import com.tyust.bean.unit.TBaseUnitRole;
import com.tyust.service.unit.UnitService;
import com.tyust.service.user.RoleService;

/** 
 * MyEclipse Struts
 * Creation date: 07-12-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class FindRolesAction{
	//机构服务层接口
	private UnitService unitService;
	//角色服务层接口
	private RoleService roleService;

	public UnitService getUnitService() {
		return unitService;
	}

	public void setUnitService(UnitService unitService) {
		this.unitService = unitService;
	}

	public RoleService getRoleService() {
		return roleService;
	}

	public void setRoleService(RoleService roleService) {
		this.roleService = roleService;
	}

	private static final Log logger = LogFactory.getLog(FindRolesAction.class);
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @throws Exception 
	 */
	public String execute() throws Exception{
		HttpServletRequest request=ServletActionContext.getRequest();
		int pagec = Integer.parseInt(request.getParameter("page")) ; 
			String unitid=request.getParameter("unitid").trim();
			 if(unitid==null|| ("null").equals(unitid)|| ("").equals(unitid)){
				return null;
			}
			List list=roleService.findAllUnitRole(unitid);
			TBaseUnitRole roleinfo=null;
			JSONArray jsonarraylist = new JSONArray();
			JSONObject json2 = new JSONObject();
			try {
				for (int i = 0; i < list.size(); i++) {
					roleinfo = (TBaseUnitRole)list.get(i);
					JSONObject json = new JSONObject();
					
					json.put("roleId",roleinfo.getRoleId());
					json.put("roleName",roleinfo.getRoleName());
					TBaseUnitInfo unitInfo=unitService.findUnit(roleinfo.getUnitId());
					json.put("unitName",unitInfo.getUnitName());
					 if(roleinfo.getInuse()==1){json.put("useInfo","是");json.put("inuse","1");}
					else {json.put("useInfo","否");json.put("inuse","0");}
					//查询该角色是否分配了权限
					List  roleModules=roleService.findRoleModules(roleinfo.getRoleId());
					if(roleModules.size()!=0){json.put("limits","是");}
					else json.put("limits","否");
					json.put("description", roleinfo.getDescription());
					jsonarraylist.put(json);
				}
				json2.put("rows", jsonarraylist);
				json2.put("page", pagec);

				 
				json2.put("total", list.size());

				ServletActionContext.getResponse().getWriter().write(json2.toString());
				logger.debug(list);
				return null;
			} catch (JSONException e) {

				e.printStackTrace();
				
			} 
			 return null;
	}
}