package com.tyust.bean.en;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EnTestInstrumentExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public EnTestInstrumentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	protected EnTestInstrumentExample(EnTestInstrumentExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table ENVIRONMENT_TEST_INSTRUMENT
	 * @ibatorgenerated
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andEtiIdIsNull() {
			addCriterion("ETI_ID is null");
			return this;
		}

		public Criteria andEtiIdIsNotNull() {
			addCriterion("ETI_ID is not null");
			return this;
		}

		public Criteria andEtiIdEqualTo(String value) {
			addCriterion("ETI_ID =", value, "etiId");
			return this;
		}

		public Criteria andEtiIdNotEqualTo(String value) {
			addCriterion("ETI_ID <>", value, "etiId");
			return this;
		}

		public Criteria andEtiIdGreaterThan(String value) {
			addCriterion("ETI_ID >", value, "etiId");
			return this;
		}

		public Criteria andEtiIdGreaterThanOrEqualTo(String value) {
			addCriterion("ETI_ID >=", value, "etiId");
			return this;
		}

		public Criteria andEtiIdLessThan(String value) {
			addCriterion("ETI_ID <", value, "etiId");
			return this;
		}

		public Criteria andEtiIdLessThanOrEqualTo(String value) {
			addCriterion("ETI_ID <=", value, "etiId");
			return this;
		}

		public Criteria andEtiIdLike(String value) {
			addCriterion("ETI_ID like", value, "etiId");
			return this;
		}

		public Criteria andEtiIdNotLike(String value) {
			addCriterion("ETI_ID not like", value, "etiId");
			return this;
		}

		public Criteria andEtiIdIn(List<String> values) {
			addCriterion("ETI_ID in", values, "etiId");
			return this;
		}

		public Criteria andEtiIdNotIn(List<String> values) {
			addCriterion("ETI_ID not in", values, "etiId");
			return this;
		}

		public Criteria andEtiIdBetween(String value1, String value2) {
			addCriterion("ETI_ID between", value1, value2, "etiId");
			return this;
		}

		public Criteria andEtiIdNotBetween(String value1, String value2) {
			addCriterion("ETI_ID not between", value1, value2, "etiId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdIsNull() {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID is null");
			return this;
		}

		public Criteria andEnvironmentTestReportIdIsNotNull() {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID is not null");
			return this;
		}

		public Criteria andEnvironmentTestReportIdEqualTo(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID =", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdNotEqualTo(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID <>", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdGreaterThan(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID >", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdGreaterThanOrEqualTo(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID >=", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdLessThan(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID <", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdLessThanOrEqualTo(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID <=", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdLike(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID like", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdNotLike(String value) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID not like", value, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdIn(List<String> values) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID in", values, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdNotIn(List<String> values) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID not in", values, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdBetween(String value1, String value2) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID between", value1, value2, "environmentTestReportId");
			return this;
		}

		public Criteria andEnvironmentTestReportIdNotBetween(String value1, String value2) {
			addCriterion("ENVIRONMENT_TEST_REPORT_ID not between", value1, value2, "environmentTestReportId");
			return this;
		}

		public Criteria andInstrumentIdIsNull() {
			addCriterion("INSTRUMENT_ID is null");
			return this;
		}

		public Criteria andInstrumentIdIsNotNull() {
			addCriterion("INSTRUMENT_ID is not null");
			return this;
		}

		public Criteria andInstrumentIdEqualTo(String value) {
			addCriterion("INSTRUMENT_ID =", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdNotEqualTo(String value) {
			addCriterion("INSTRUMENT_ID <>", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdGreaterThan(String value) {
			addCriterion("INSTRUMENT_ID >", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdGreaterThanOrEqualTo(String value) {
			addCriterion("INSTRUMENT_ID >=", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdLessThan(String value) {
			addCriterion("INSTRUMENT_ID <", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdLessThanOrEqualTo(String value) {
			addCriterion("INSTRUMENT_ID <=", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdLike(String value) {
			addCriterion("INSTRUMENT_ID like", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdNotLike(String value) {
			addCriterion("INSTRUMENT_ID not like", value, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdIn(List<String> values) {
			addCriterion("INSTRUMENT_ID in", values, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdNotIn(List<String> values) {
			addCriterion("INSTRUMENT_ID not in", values, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdBetween(String value1, String value2) {
			addCriterion("INSTRUMENT_ID between", value1, value2, "instrumentId");
			return this;
		}

		public Criteria andInstrumentIdNotBetween(String value1, String value2) {
			addCriterion("INSTRUMENT_ID not between", value1, value2, "instrumentId");
			return this;
		}
	}
}